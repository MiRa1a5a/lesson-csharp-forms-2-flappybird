<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AABAvYj/LKl1/yyqdf9BwYv/ScqT/zq3gv8rpnL/NLB7/0fHkf9Ix5H/Mq96/ymncv85uYP/SsqT/0PB
        iv8uqnX/LKl0/0DAiv9KypT/O7iD/yqncv8vrXj/RMWO/0rKk/83tH//KqZy/zW0f/9IyZL/RsWP/zCt
        eP8qqHP/OruE/1Thof9G1JP/MLt+/zS+gf9L2Jn/UuCg/z7KjP8vuHv/OsaH/1Dfnv9P3Jz/NsKE/y+5
        fP9CzpD/UuCh/0fVlv8xvH7/M72A/0vXl/9T4KD/QMyO/y+6ff83wYT/Tduc/1Dfn/87xoj/MLh7/z7J
        i/9R4J//S9qZ/zO/gf8vuXz/V8md/17RpP9TxZr/RbOK/0m5jv9azKH/Xc+k/0y9k/9Es4n/Tr6T/17P
        pP9Zy6H/SLeO/0a0i/9TxZv/XdCl/1TFm/9Fs4r/SLeO/1rLoP9dz6X/T8GX/0Sziv9LupH/W86j/1rN
        o/9LupH/RbOK/1HBlv9e0aX/V8me/0e2jf9itXP/YrVz/2O2c/9itXP/YrVy/2O1cv9jtXP/Y7Vz/2O1
        cv9itXL/YrVz/2K1dP9itXP/YrVz/2K1c/9itXP/YrZz/2K1c/9itXL/YrVz/2K2c/9itnP/YbVz/2K1
        c/9jtXP/YrZz/2K1c/9itXP/YrVz/2G2c/9itnP/YrZz/2zddP9t3HT/bNx0/2zcdP9t3HT/bdx0/2zd
        dP9s3XT/bdx0/27cdP9s3XT/a910/2zddP9s3XT/bN10/2zddP9r3XT/bdx0/23cdP9s3XT/a910/2vd
        dP9s3XT/bd10/23cdP9s3XT/bN10/2zddP9s3XT/a910/2vddP9r3nT/atx0/2vcdP9p23P/Z9hy/2vb
        c/9t23T/adpz/2fZc/9q2nT/a9t0/2nbdP9n2XL/attz/2zbdP9s3HT/aNly/2fZcv9p3HT/a9xz/2nZ
        cv9o2nL/adx0/2jacv9q2nP/atx0/2nbdP9p2XP/adpz/2zcdP9r3HT/adtz/2fYcv9l03D/ZNNw/2LS
        bv9l1XH/a9pz/2zac/9q1nL/Y9Fu/2TTb/9l1XD/ZNJu/2bSb/9q2nT/bNx0/2zbc/9m1HD/ZtFv/2TU
        cP9l0m7/ZdBu/2jVcf9r2XP/ZtJv/2TSbv9l1XD/ZNNv/2PQbv9n1nH/a9t0/2rbdP9o1nL/Y9Bu/2jQ
        b/9p03D/bM9z/3vRgP+D1YL/iNeK/5DZmP961ID/a9h0/2fYcf9qzW//ccZ1/3XMff9syXH/Z8dr/2XK
        bv9ozHH/a8Zx/2jPcP9m0G7/eNB6/5DYk/+G1Yf/b9Z1/2bXcv9p13P/dMxz/4HRgf991Xv/bdBx/2bT
        b/9p13P/l9iW/5DWj/+m3ar/tuXC/7zju/++5Lv/vevL/7njuf+o4a3/i9WZ/1VzVf9JVUf/TVlO/0lW
        Rf9EVkP/Q1dE/0RVRP9QY1D/jcKJ/5HalP+x4a//yOfG/8PjvP+w4q//ld6i/5zgp/+226n/weC4/77d
        rf+m26H/jNaO/5nXlP/I4br/x96z/8LnyP+97M7/wufG/8Tmw/+44MX/ip2K/4aViv97lYz/O3uP/ydz
        kP8pc4//KnOQ/yp0kP8qdJD/KXSR/zN6kf99loj/jKCI/4uijv+Koo//j6OO/5Ollf+RqZz/la6h/8Da
        vf/D6sv/w+TE/8fhuf/E3rP/w+TD/8besP/N3rH/w+nK/8Hs0f/D58f/tM+v/5a6qP8+X2f/ME9c/y1Y
        Z/8gpNT/Grjz/xu48f8buPH/G7jx/xu48v8eq+D/JJnC/zdScf89Qlv/PUNd/zxDXf89Q13/PUNe/zxD
        Xf9FT2T/nK2c/7jWuf/E5sb/yN+z/8zftf/F5sf/y+G0/9Ljuv/F6sr/wOzP/8Plxf9zeGf/OFZc/yWi
        zv8fq97/H6ve/xu06/8atu//Grbv/xq27/8atu//HLTt/yl6mP83RVf/Ql2+/0Jj2P9CYtj/Q2LY/0Ni
        2P9DYtj/QWPY/0Fhx/9BSlz/gIZx/8zlvP/M4bj/0uXA/8jmx//Y8tj/1+3P/8jkwf/E58b/yejJ/29z
        ZP8zOj7/MVdn/zBabP8sYXb/IKfY/xu48/8atfD/Grfw/yCl1/8sYXX/OVmQ/0NZsf89SXn/O0Zq/zxG
        a/88RWz/PEVs/z1Fa/88Rmv/PEVl/zc5PP97hHr/1/Tc/9nz2v/W7tL/yuPB/9r+8P/X+eb/zvDQ/7/R
        s/+Xnof/V46H/zGEiP8zhIX/M4SF/zKDiP8rgJ3/Jpm8/yLN8f8hz/L/J8Dc/zGJjv87apD/QFOc/z9N
        h/8+TIH/P0yB/z9Mgf8/TIH/P0yB/z5Mgf8+TYH/PEyC/2R2lv+dsav/yejc/9j66v/N7NP/2v7x/9j8
        7//F5Nj/kq6m/zhYWf9Dub3/SvP4/0jx9f9H8vb/SOfq/zdvc/8ye33/MtPa/y7m7f8s8Pb/LfH5/zGf
        o/82U17/Q1+3/0Rgz/9DYM7/Q2HO/0Nhzv9DYc7/Q2HO/0Nhzv9DYc//Sl6g/1RVT/+1x7X/2/7w/9n9
        7v/V7dD/1/fl/3WCe/88cnT/NNnf/5Lw8P/U+vn/0fn5/9L5+v/C9/f/TuPo/zStsf82UlL/Mrm+/yzy
        +f8r7/b/LuXs/zLN1f85XGj/Pj9M/z1AT/89QE7/PUBO/z1BT/89P07/PT9O/z9CUf+Ai4j/v8CG/8XD
        ef/P3an/0+O4/8jBc//L0JT/a25d/1dwcf+i8/T/zvv6/+n7+//o+/r/6vv6/+L7+v+1/v//hLq7/zo7
        O/8ysbb/LPL5/y3z+v8vs7j/PXl9/5mmqf+1tLX/uLq5/7m8u/+6vLz/uLu6/3R0df9FSEX/na2d/7zD
        kP/Ivmn/yblh/8a6Y//GumT/x7lg/8a3YP9lYUT/bXF0/+f39v/q/fz/6Pz8/+j8+//o/Pv/4/f2/7zG
        xf+HoaL/NXp9/y/Izv8v5ev/Mba7/1SRlf+CfoH/3+Di//j8/f/6//7/zdDQ/8fJyf/6/v7/lJaX/0pK
        Q/+5uH3/yr9q/8i5Yf/IuWH/yLlh/8e5Yf/IuWH/xrZh/3JsRv9yd2//0eTh/9Xo5f/V5+b/1efm/9bo
        5//K3dz/V2hp/zF/gf8v6/H/K/D4/zHN1P81R0r/k5WY/+7x9f/3+/v/+f79//X5+f90dHT/X19f//Dz
        8/+UlZb/SUU8/7WmXP/JumL/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/va9e/5qRW/9WWlb/UlhV/1RY
        Vv9TWFb/U1dW/09fX/83vMD/Lt7i/yzv9f8s8fj/L87U/zRGSP+Tlpf/7/P2//f8+//5/v3/9fn5/3Fy
        cv9cXV3/8fPz/5SWlf9JRTv/tKZc/8m6Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/Ku2L/uaxc/46G
        UP+Oh1D/g3xO/0A+Of9pb27/o7Ky/57s7v909/v/K+/1/ynx+P8tzdP/MUNF/5eZmf/4/v7/+P38//n+
        /f/3/Pv/xMfH/6Slpv+JjI3/iohr/5SKU/+/sV//yblh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/JumH/yrti/8u8Yv+7rV7/amRG/4yRhP+8ycj/vMTF/5nS1f9h8fX/YfT4/2La3v9oeXr/mJqa/8nN
        zf/w9PP/+//+//n9/f/W29v/sLKu/2JgS/+Xj1P/zLxj/8m5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8m4Yf/FtmL/kIhV/01MQv9KSUD/d314/9Lq6v/U7e3/1ezr/9vr
        6f+LkI//TEtM/87R0f/v8vH/6ezs/3l6dv9kYEb/vLBg/8a4Yf/JuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8m5Yv+/sV//sqVa/7SmWv+ZkFz/YGFe/11f
        X/9eX1//XmBf/0xNSv8+Pjz/WVpZ/19gX/9hYV7/l45b/7ipXP/HuGH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i6Yf/JumH/zLti/7qr
        XP+QhlD/joVQ/46ET/+OhU//kYdR/5OJU/+RiFH/kIdP/5OJUP+4rFz/y7pi/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/ybph/8u7Yv/LumL/y7pi/8u6Yv/Ku2L/yrti/8q7Yv/Ku2L/y7ti/8m5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5Yf/IuWH/yLlh/8i5
        Yf/IuWH/yLlh/8i5Yf/IuWH/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>